package qgddfe;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

//import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEComplex;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEComplexType;

//import com.maxeler.maxcompiler.v2.kernelcompiler.KernelBase;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStruct;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStructType;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
//import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
//import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
//import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;

//import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
//import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;

//import java.util.ArrayList;
//import java.util.List;

/**
@brief ????????????
@return ??????????
*/
public class TraceMergeKernel extends Kernel {

	

/**
@brief ????????????
@return ??????????
*/
	public TraceMergeKernel(final KernelParameters parameters) {
		super(parameters);

		// Input		
		DFEVar trace_0 = io.input("trace_0", dfeUInt(64));
		DFEVar trace_1 = io.input("trace_1", dfeUInt(64));
		DFEVar trace_2 = io.input("trace_2", dfeUInt(64));
		DFEVar trace_3 = io.input("trace_3", dfeUInt(64));

		DFEVar trace = trace_3.cat(trace_2);
		trace = trace.cat(trace_1);
		trace = trace.cat(trace_0).reinterpret( dfeUInt(256) );


		io.output("trace", trace, dfeUInt(256));

	}
		
}
